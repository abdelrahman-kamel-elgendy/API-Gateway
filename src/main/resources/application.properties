# ========================================
# API GATEWAY CONFIGURATION
# ========================================

# --- Server & Application ---
server.port=${SERVER_PORT}
spring.application.name=${APPLICATION_NAME}

# --- Eureka Client ---
eureka.client.initial-instance-info-replication-interval-seconds=10
eureka.client.instance-info-replication-interval-seconds=30
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# --- Eureka Instance ---
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90
eureka.client.service-url.defaultZone=http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@${EUREKA_DEFAULT_ZONE}
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# --- Gateway Discovery ---
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# --- CORS Configuration ---
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origin-patterns=${GATEWAY_CORS_ALLOWED_ORIGIN_PATTERNS}
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=${GATEWAY_CORS_ALLOWED_METHODS}
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=${GATEWAY_CORS_ALLOWED_HEADERS}
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=${GATEWAY_CORS_ALLOW_CREDENTIALS}
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=${GATEWAY_CORS_MAX_AGE}

# --- HTTP Client ---
spring.cloud.gateway.httpclient.connect-timeout=${GATEWAY_HTTPCLIENT_CONNECT_TIMEOUT}
spring.cloud.gateway.httpclient.response-timeout=${GATEWAY_HTTPCLIENT_RESPONSE_TIMEOUT}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.info.env.enabled=true
